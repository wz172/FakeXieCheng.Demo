// <auto-generated />
using System;
using FakeXieCheng.Demo.MyFakeContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FakeXieCheng.Demo.Migrations
{
    [DbContext(typeof(FakeContext))]
    [Migration("20210414135747_UpdateTourisrRouts")]
    partial class UpdateTourisrRouts
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FakeXieCheng.Demo.Models.TouristRout", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DepartureTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1500)
                        .HasColumnType("nvarchar(1500)");

                    b.Property<float?>("DiscountPresent")
                        .HasColumnType("real");

                    b.Property<decimal>("DriinalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Features")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fees")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("OriginalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<double?>("Rating")
                        .HasColumnType("float");

                    b.Property<int?>("StratCity")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte>("TravlDays")
                        .HasColumnType("tinyint");

                    b.Property<int?>("TripType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("TouristRout");

                    b.HasData(
                        new
                        {
                            ID = new Guid("780a1962-602f-46a2-9719-72f72810106e"),
                            CreateTime = new DateTime(2021, 4, 14, 21, 57, 46, 927, DateTimeKind.Local).AddTicks(7708),
                            Description = "都是水",
                            DriinalPrice = 0m,
                            Features = "吃喝玩乐",
                            Fees = "住宿费自己掏",
                            Notes = "注意安全",
                            OriginalPrice = 1300m,
                            Title = "青天河",
                            TravlDays = (byte)0
                        },
                        new
                        {
                            ID = new Guid("8e34dd2f-bdb6-4053-b4d5-3443f712b9c0"),
                            CreateTime = new DateTime(2021, 4, 13, 21, 57, 46, 929, DateTimeKind.Local).AddTicks(3806),
                            Description = "都是水111",
                            DriinalPrice = 0m,
                            Features = "```吃喝玩乐",
                            Fees = "555住宿费自己掏",
                            Notes = "··注意安全",
                            OriginalPrice = 1200m,
                            Title = "云台山",
                            TravlDays = (byte)0
                        });
                });

            modelBuilder.Entity("FakeXieCheng.Demo.Models.TouristRoutPicture", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Destription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TouristRoutID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Url")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("ID");

                    b.HasIndex("TouristRoutID");

                    b.ToTable("TouristRoutPictures");

                    b.HasData(
                        new
                        {
                            ID = -1,
                            Destription = "太美丽了",
                            TouristRoutID = new Guid("780a1962-602f-46a2-9719-72f72810106e"),
                            Url = "../images/1.jpg"
                        },
                        new
                        {
                            ID = -2,
                            Destription = "太美丽了11111",
                            TouristRoutID = new Guid("8e34dd2f-bdb6-4053-b4d5-3443f712b9c0"),
                            Url = "../images/2.jpg"
                        },
                        new
                        {
                            ID = -3,
                            Destription = "<<<<<<太美丽了11",
                            TouristRoutID = new Guid("8e34dd2f-bdb6-4053-b4d5-3443f712b9c0"),
                            Url = "../images/3.jpg"
                        });
                });

            modelBuilder.Entity("FakeXieCheng.Demo.Models.TouristRoutPicture", b =>
                {
                    b.HasOne("FakeXieCheng.Demo.Models.TouristRout", "TouristRout")
                        .WithMany("Pictures")
                        .HasForeignKey("TouristRoutID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TouristRout");
                });

            modelBuilder.Entity("FakeXieCheng.Demo.Models.TouristRout", b =>
                {
                    b.Navigation("Pictures");
                });
#pragma warning restore 612, 618
        }
    }
}
